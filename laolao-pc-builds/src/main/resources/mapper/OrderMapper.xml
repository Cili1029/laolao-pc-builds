<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.laolao.mapper.OrderMapper">
    <insert id="insertToDetail">
        insert into order_detail(id, name, variant_name, image, order_id, quantity, price)
        VALUES
        <foreach collection="orderDetails" item="orderDetail" separator=",">
            (
            #{orderDetail.id},
            #{orderDetail.name},
            <choose>
                <when test="orderDetail.variantName != null and orderDetail.variantName != ''">
                    #{orderDetail.variantName}
                </when>
                <otherwise>
                    NULL
                </otherwise>
            </choose>,
            #{orderDetail.image},
            #{orderDetail.orderId},
            #{orderDetail.quantity},
            #{orderDetail.price}
            )
        </foreach>
    </insert>

    <update id="update">
        update orders
        <set>
            <if test="consignee != null and consignee != ''">
                consignee=#{consignee},
            </if>
            <if test="phone != null and phone != ''">
                phone=#{phone},
            </if>
            <if test="address != null and address != ''">
                address=#{address},
            </if>
            <if test="status != null">
                status=#{status},
            </if>
            <if test="cancelReason != null and cancelReason != ''">
                cancel_reason=#{cancelReason},
            </if>
            <if test="checkoutTime != null">
                checkout_time=#{checkoutTime},
            </if>
            <if test="cancelTime != null">
                cancel_time=#{cancelTime},
            </if>
        </set>
                where user_id = #{userId} and number = #{number}
    </update>

    <select id="selectOrders" resultType="com.laolao.pojo.vo.OrdersVO" parameterType="OrdersVO">
        SELECT *
        FROM (SELECT o.number,
                     o.status,
                     od.name,
                     COUNT(*) OVER (PARTITION BY o.number)                    as product_count,
                     od.image,
                     o.original_amount - o.discount_amount                    as final_amount,
                     ROW_NUMBER() OVER (PARTITION BY o.number ORDER BY od.id) as rn
              FROM orders o
                       JOIN order_detail od ON o.id = od.order_id
              WHERE user_id = 1 order by created_at desc) t
        WHERE rn = 1;
    </select>
</mapper>
